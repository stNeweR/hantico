openapi: 3.0.0
info:
  title: Car Brands API
  version: 1.0.0
  description: API для управления марками автомобилей

paths:
  /car-brands:
    get:
      tags: [Car Brands]
      summary: Получить список марок автомобилей
      description: |
        Возвращает список марок автомобилей с возможностью фильтрации по названию.
        Фильтрация осуществляется через JSON тело GET запроса.
      requestBody:
        description: Параметры фильтрации
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FilterRequest"
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CarBrand"
              example:
                data:
                  - id: 1
                    title: "Audi"
                    created_at: "2025-03-30T04:36:52Z"
                    updated_at: "2025-03-30T04:36:52Z"
                  - id: 2
                    title: "BMW"
                    created_at: "2025-03-30T04:36:52Z"
                    updated_at: "2025-03-30T04:36:52Z"

    post:
      tags: [Car Brands]
      summary: Создать новую марку автомобиля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarBrandInput"
            example:
              title: "Mercedes"
      responses:
        201:
          description: Марка создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/CarBrand"
              example:
                data:
                  id: 3
                  title: "Mercedes"
                  created_at: "2025-03-30T04:36:52Z"
                  updated_at: "2025-03-30T04:36:52Z"
        422:
          description: Ошибка валидации

  /car-brands/{id}:
    get:
      tags: [Car Brands]
      summary: Получить марку автомобиля по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/CarBrand"
              example:
                data:
                  id: 1
                  title: "Audi"
                  created_at: "2025-03-30T04:36:52Z"
                  updated_at: "2025-03-30T04:36:52Z"
        404:
          description: Марка не найдена

    put:
      tags: [Car Brands]
      summary: Обновить марку автомобиля
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarBrandInput"
            example:
              title: "Audi AG"
      responses:
        200:
          description: Марка обновлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/CarBrand"
              example:
                data:
                  id: 1
                  title: "Audi AG"
                  created_at: "2025-03-30T04:36:52Z"
                  updated_at: "2025-03-31T10:15:00Z"
        404:
          description: Марка не найдена
        422:
          description: Ошибка валидации

    delete:
      tags: [Car Brands]
      summary: Удалить марку автомобиля
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: Марка удалена
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: true
                message: "Car brand deleted successfully."
        404:
          description: Марка не найдена

  /car-brand-models:
    get:
      tags: [Car Brand Models]
      summary: Получить список моделей автомобилей
      description: |
        Возвращает список моделей автомобилей с возможностью фильтрации по названию и марке.
        Фильтрация осуществляется через JSON тело GET запроса.
      requestBody:
        description: Параметры фильтрации
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarModelFilterRequest"
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CarBrandModel"
              example:
                data:
                  - id: 1
                    title: "A6"
                    car_brand_id: 1
                    created_at: "2025-03-30T04:36:52Z"
                    updated_at: "2025-03-30T04:36:52Z"
                  - id: 2
                    title: "Q7"
                    car_brand_id: 1
                    created_at: "2025-03-30T04:36:52Z"
                    updated_at: "2025-03-30T04:36:52Z"

    post:
      tags: [Car Brand Models]
      summary: Создать новую модель автомобиля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarBrandModelInput"
            example:
              title: "A8"
              car_brand_id: 1
      responses:
        201:
          description: Модель создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/CarBrandModel"
              example:
                data:
                  id: 3
                  title: "A8"
                  car_brand_id: 1
                  created_at: "2025-03-30T04:36:52Z"
                  updated_at: "2025-03-30T04:36:52Z"
        422:
          description: Ошибка валидации

  /car-brand-models/{id}:
    get:
      tags: [Car Brand Models]
      summary: Получить модель автомобиля по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/CarBrandModel"
              example:
                data:
                  id: 1
                  title: "A6"
                  car_brand_id: 1
                  created_at: "2025-03-30T04:36:52Z"
                  updated_at: "2025-03-30T04:36:52Z"
        404:
          description: Модель не найдена

    put:
      tags: [Car Brand Models]
      summary: Обновить модель автомобиля
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarBrandModelInput"
            example:
              title: "A6 Allroad"
              car_brand_id: 1
      responses:
        200:
          description: Модель обновлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/CarBrandModel"
              example:
                data:
                  id: 1
                  title: "A6 Allroad"
                  car_brand_id: 1
                  created_at: "2025-03-30T04:36:52Z"
                  updated_at: "2025-03-31T10:15:00Z"
        404:
          description: Модель не найдена
        422:
          description: Ошибка валидации

    delete:
      tags: [Car Brand Models]
      summary: Удалить модель автомобиля
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: Модель удалена
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: true
                message: "Car brand model deleted successfully."
        404:
          description: Модель не найдена

components:
  schemas:
    CarBrandModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        car_brand_id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CarBrandModelInput:
      type: object
      required: [title, car_brand_id]
      properties:
        title:
          type: string
          minLength: 2
          maxLength: 255
          example: "A6"
        car_brand_id:
          type: integer
          format: int64
          example: 1

    CarModelFilterRequest:
      type: object
      properties:
        title:
          type: string
          description: Фильтр по названию модели
          example: "A6"
          nullable: true
        car_brand_id:
          type: integer
          description: Фильтр по ID марки автомобиля
          example: 1
          nullable: true
      additionalProperties: false

    CarBrand:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CarBrandInput:
      type: object
      required: [title]
      properties:
        title:
          type: string
          minLength: 2
          maxLength: 255
          example: "Audi"

    FilterRequest:
      type: object
      properties:
        title:
          type: string
          description: Фильтр по названию марки
          example: "Aud"
          nullable: true
      additionalProperties: false